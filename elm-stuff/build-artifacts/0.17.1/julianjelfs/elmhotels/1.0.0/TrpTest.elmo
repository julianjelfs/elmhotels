var _julianjelfs$elmhotels$TrpTest$view = function (model) {
	var filtered = _julianjelfs$elmhotels$Filtering$restrict(model);
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$section,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('header')
					]),
				_elm_lang$core$Native_List.fromArray(
					[_julianjelfs$elmhotels$Header$header])),
				A2(
				_elm_lang$html$Html$section,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('sidebar')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html_App$map,
						_julianjelfs$elmhotels$Models$AutocompleterUpdate,
						_julianjelfs$elmhotels$Autocompleter$view(model.autocompleter)),
						_julianjelfs$elmhotels$Filters$view(filtered.criteria.filter)
					])),
				A2(
				_elm_lang$html$Html$section,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('content')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_julianjelfs$elmhotels$SortBar$view(filtered.criteria.sort),
						A2(_julianjelfs$elmhotels$Pager$view, filtered.total, filtered.criteria.paging),
						_julianjelfs$elmhotels$HotelsList$hotelList(filtered.hotels)
					])),
				A2(
				_elm_lang$html$Html$section,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('footer')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h3,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('My beautiful footer section')
							]))
					]))
			]));
};
var _julianjelfs$elmhotels$TrpTest$update = F2(
	function (msg, model) {
		var updateCriteria = F2(
			function (model, criteria) {
				return _elm_lang$core$Native_Utils.update(
					model,
					{criteria: criteria});
			});
		var criteria = model.criteria;
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'PageChange':
				return {
					ctor: '_Tuple2',
					_0: A2(
						updateCriteria,
						model,
						_elm_lang$core$Native_Utils.update(
							criteria,
							{paging: _p0._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'FilterChange':
				return {
					ctor: '_Tuple2',
					_0: A2(
						updateCriteria,
						model,
						_elm_lang$core$Native_Utils.update(
							criteria,
							{filter: _p0._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SortChange':
				return {
					ctor: '_Tuple2',
					_0: A2(
						updateCriteria,
						model,
						_elm_lang$core$Native_Utils.update(
							criteria,
							{sort: _p0._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'HotelsLoadSucceeded':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{hotels: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'HotelsLoadFailed':
				var e = A2(_elm_lang$core$Debug$log, 'hotels failed to load: ', _p0._0);
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				var _p3 = _p0._0;
				var _p1 = A2(_julianjelfs$elmhotels$Autocompleter$update, _p3, model.autocompleter);
				var m = _p1._0;
				var e = _p1._1;
				var _p2 = _p3;
				if (_p2.ctor === 'SelectDestination') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								autocompleter: m,
								hotels: _elm_lang$core$Native_List.fromArray(
									[])
							}),
						_1: _elm_lang$core$Platform_Cmd$batch(
							_elm_lang$core$Native_List.fromArray(
								[
									_julianjelfs$elmhotels$Api$getHotels(_p2._0),
									A2(_elm_lang$core$Platform_Cmd$map, _julianjelfs$elmhotels$Models$AutocompleterUpdate, e)
								]))
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{autocompleter: m}),
						_1: A2(_elm_lang$core$Platform_Cmd$map, _julianjelfs$elmhotels$Models$AutocompleterUpdate, e)
					};
				}
		}
	});
var _julianjelfs$elmhotels$TrpTest$initialModel = A4(
	_julianjelfs$elmhotels$Models$Model,
	_elm_lang$core$Native_List.fromArray(
		[]),
	0,
	A3(_julianjelfs$elmhotels$Models$Criteria, _julianjelfs$elmhotels$Models$initialFilter, _julianjelfs$elmhotels$Models$initialSortOrder, _julianjelfs$elmhotels$Models$initialPager),
	_julianjelfs$elmhotels$Autocompleter$initialModel);
var _julianjelfs$elmhotels$TrpTest$init = {ctor: '_Tuple2', _0: _julianjelfs$elmhotels$TrpTest$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _julianjelfs$elmhotels$TrpTest$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _julianjelfs$elmhotels$TrpTest$init,
			update: _julianjelfs$elmhotels$TrpTest$update,
			view: _julianjelfs$elmhotels$TrpTest$view,
			subscriptions: function (_p4) {
				return _elm_lang$core$Platform_Sub$none;
			}
		})
};
