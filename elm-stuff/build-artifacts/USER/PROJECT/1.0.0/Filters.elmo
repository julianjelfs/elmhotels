Elm.Filters = Elm.Filters || {};
Elm.Filters.make = function (_elm) {
   "use strict";
   _elm.Filters = _elm.Filters || {};
   if (_elm.Filters.values)
   return _elm.Filters.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Filters",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models = Elm.Models.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var replaceFilter = F2(function (criteria,
   filter) {
      return _U.replace([["filter"
                         ,filter]],
      criteria);
   });
   var addOrRemoveStar = F2(function (criteria,
   star) {
      return function () {
         var filter = criteria.filter;
         var inList = A2($List.member,
         star,
         filter.stars);
         return inList ? _U.replace([["filter"
                                     ,_U.replace([["stars"
                                                  ,A2($List.filter,
                                                  function (s) {
                                                     return !_U.eq(s,star);
                                                  },
                                                  filter.stars)]],
                                     filter)]],
         criteria) : _U.replace([["filter"
                                 ,_U.replace([["stars"
                                              ,A2($List._op["::"],
                                              star,
                                              filter.stars)]],
                                 filter)]],
         criteria);
      }();
   });
   var stars = F3(function (num,
   criteria,
   address) {
      return A2($Html.div,
      _L.fromArray([$Html$Attributes.$class("stars")]),
      _L.fromArray([A2($Html.input,
                   _L.fromArray([$Html$Attributes.type$("checkbox")
                                ,A2($Html$Events.onClick,
                                address,
                                A2(addOrRemoveStar,
                                criteria,
                                num))]),
                   _L.fromArray([]))
                   ,A2($Html.span,
                   _L.fromArray([]),
                   _L.fromArray([$Html.text(A2($Basics._op["++"],
                   $Basics.toString(num),
                   " Stars"))]))]));
   });
   var filters = F2(function (criteria,
   address) {
      return function () {
         var filter = criteria.filter;
         return A2($Html.section,
         _L.fromArray([$Html$Attributes.$class("filters")]),
         _L.fromArray([A2($Html.h3,
                      _L.fromArray([]),
                      _L.fromArray([$Html.text("Filters")]))
                      ,A2($Html.div,
                      _L.fromArray([]),
                      _L.fromArray([A2($Html.input,
                      _L.fromArray([$Html$Attributes.placeholder("Hotel Name")
                                   ,$Html$Attributes.autofocus(true)
                                   ,$Html$Attributes.type$("text")
                                   ,$Html$Attributes.value(criteria.filter.hotelName)
                                   ,A3($Html$Events.on,
                                   "input",
                                   $Html$Events.targetValue,
                                   function (str) {
                                      return A2($Signal.message,
                                      address,
                                      A2(replaceFilter,
                                      criteria,
                                      _U.replace([["hotelName",str]],
                                      filter)));
                                   })]),
                      _L.fromArray([]))]))
                      ,A2($Html.div,
                      _L.fromArray([]),
                      _L.fromArray([A2($Html.label,
                                   _L.fromArray([]),
                                   _L.fromArray([$Html.text("Stars: ")]))
                                   ,A2($Html.div,
                                   _L.fromArray([]),
                                   _L.fromArray([A3(stars,
                                                5,
                                                criteria,
                                                address)
                                                ,A3(stars,4,criteria,address)
                                                ,A3(stars,3,criteria,address)
                                                ,A3(stars,2,criteria,address)
                                                ,A3(stars,
                                                1,
                                                criteria,
                                                address)]))]))
                      ,A2($Html.div,
                      _L.fromArray([$Html$Attributes.$class("clear")]),
                      _L.fromArray([A2($Html.label,
                                   _L.fromArray([]),
                                   _L.fromArray([$Html.text("Minimum Rating: ")]))
                                   ,A2($Html.input,
                                   _L.fromArray([$Html$Attributes.type$("range")]),
                                   _L.fromArray([]))]))
                      ,A2($Html.div,
                      _L.fromArray([]),
                      _L.fromArray([A2($Html.label,
                                   _L.fromArray([]),
                                   _L.fromArray([$Html.text("Minimum Price: ")]))
                                   ,A2($Html.input,
                                   _L.fromArray([$Html$Attributes.type$("range")]),
                                   _L.fromArray([]))]))]));
      }();
   });
   _elm.Filters.values = {_op: _op
                         ,addOrRemoveStar: addOrRemoveStar
                         ,stars: stars
                         ,replaceFilter: replaceFilter
                         ,filters: filters};
   return _elm.Filters.values;
};