Elm.Pager = Elm.Pager || {};
Elm.Pager.make = function (_elm) {
   "use strict";
   _elm.Pager = _elm.Pager || {};
   if (_elm.Pager.values)
   return _elm.Pager.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Pager",
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models = Elm.Models.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var mailbox = $Signal.mailbox(A2($Models.Paging,
   20,
   0));
   var signal = mailbox.signal;
   var address = mailbox.address;
   var pager = F2(function (total,
   paging) {
      return function () {
         var pageSize = $Basics.toFloat(paging.pageSize);
         var hotelCount = $Basics.toFloat(total);
         var pageCount = $Basics.ceiling(hotelCount / pageSize);
         var pageIndex = paging.pageIndex;
         var pageNum = pageIndex + 1;
         var lastPage = _U.eq(pageNum,
         pageCount);
         var firstPage = _U.eq(pageIndex,
         0);
         return A2($Html.section,
         _L.fromArray([$Html$Attributes.$class("pager")]),
         _L.fromArray([A2($Html.button,
                      _L.fromArray([$Html$Attributes.$class("button prev")
                                   ,$Html$Attributes.disabled(firstPage)
                                   ,A2($Html$Events.onClick,
                                   mailbox.address,
                                   _U.replace([["pageIndex"
                                               ,pageIndex - 1]],
                                   paging))]),
                      _L.fromArray([$Html.text("Previous")]))
                      ,A2($Html.span,
                      _L.fromArray([$Html$Attributes.$class("total-pages")]),
                      _L.fromArray([$Html.text(A2($Basics._op["++"],
                      "Page ",
                      A2($Basics._op["++"],
                      $Basics.toString(A2($Debug.watch,
                      "pageNum",
                      pageNum)),
                      A2($Basics._op["++"],
                      " of ",
                      $Basics.toString(pageCount)))))]))
                      ,A2($Html.button,
                      _L.fromArray([$Html$Attributes.$class("button next")
                                   ,$Html$Attributes.disabled(lastPage)
                                   ,A2($Html$Events.onClick,
                                   mailbox.address,
                                   _U.replace([["pageIndex"
                                               ,pageIndex + 1]],
                                   paging))]),
                      _L.fromArray([$Html.text("Next")]))]));
      }();
   });
   _elm.Pager.values = {_op: _op
                       ,signal: signal
                       ,pager: pager
                       ,address: address};
   return _elm.Pager.values;
};