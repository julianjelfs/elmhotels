var _julianjelfs$elmhotels$TrpTest$view = function (model) {
	var filtered = _julianjelfs$elmhotels$Filtering$restrict(model);
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$section,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('header'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _julianjelfs$elmhotels$Header$header,
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$section,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('sidebar'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$map,
							_julianjelfs$elmhotels$Models$AutocompleterUpdate,
							_julianjelfs$elmhotels$Autocompleter_View$view(model.autocompleter)),
						_1: {
							ctor: '::',
							_0: _julianjelfs$elmhotels$Filters$view(filtered.criteria.filter),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$section,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('content'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _julianjelfs$elmhotels$SortBar$view(filtered.criteria.sort),
							_1: {
								ctor: '::',
								_0: A2(_julianjelfs$elmhotels$Pager$view, filtered.total, filtered.criteria.paging),
								_1: {
									ctor: '::',
									_0: _julianjelfs$elmhotels$HotelsList$hotelList(filtered.hotels),
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$section,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('footer'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h3,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('My beautiful footer section'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _julianjelfs$elmhotels$TrpTest$update = F2(
	function (msg, model) {
		var updateCriteria = F2(
			function (model, criteria) {
				return _elm_lang$core$Native_Utils.update(
					model,
					{criteria: criteria});
			});
		var criteria = model.criteria;
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'PageChange':
				return {
					ctor: '_Tuple2',
					_0: A2(
						updateCriteria,
						model,
						_elm_lang$core$Native_Utils.update(
							criteria,
							{paging: _p0._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'FilterChange':
				return {
					ctor: '_Tuple2',
					_0: A2(
						updateCriteria,
						model,
						_elm_lang$core$Native_Utils.update(
							criteria,
							{filter: _p0._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SortChange':
				return {
					ctor: '_Tuple2',
					_0: A2(
						updateCriteria,
						model,
						_elm_lang$core$Native_Utils.update(
							criteria,
							{sort: _p0._0})),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'HotelsLoad':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{hotels: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var e = A2(_elm_lang$core$Debug$log, 'hotels failed to load: ', _p0._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				var _p1 = A2(_julianjelfs$elmhotels$Autocompleter_State$update, _p0._0, model.autocompleter);
				var updated = _p1._0;
				var localFx = _p1._1;
				var rootFx = _p1._2;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{autocompleter: updated}),
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: A2(_elm_lang$core$Platform_Cmd$map, _julianjelfs$elmhotels$Models$AutocompleterUpdate, localFx),
							_1: {
								ctor: '::',
								_0: rootFx,
								_1: {ctor: '[]'}
							}
						})
				};
		}
	});
var _julianjelfs$elmhotels$TrpTest$initialModel = A4(
	_julianjelfs$elmhotels$Models$Model,
	{ctor: '[]'},
	0,
	A3(_julianjelfs$elmhotels$Models$Criteria, _julianjelfs$elmhotels$Models$initialFilter, _julianjelfs$elmhotels$Models$initialSortOrder, _julianjelfs$elmhotels$Models$initialPager),
	_julianjelfs$elmhotels$Autocompleter_Types$initialModel);
var _julianjelfs$elmhotels$TrpTest$init = function () {
	var m = _julianjelfs$elmhotels$TrpTest$initialModel;
	return {
		ctor: '_Tuple2',
		_0: m,
		_1: _julianjelfs$elmhotels$Api$getHotels(m.autocompleter.selected)
	};
}();
var _julianjelfs$elmhotels$TrpTest$main = _elm_lang$html$Html$program(
	{
		init: _julianjelfs$elmhotels$TrpTest$init,
		update: _julianjelfs$elmhotels$TrpTest$update,
		view: _julianjelfs$elmhotels$TrpTest$view,
		subscriptions: function (_p2) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
