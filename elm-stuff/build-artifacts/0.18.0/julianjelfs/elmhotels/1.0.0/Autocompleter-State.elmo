var _julianjelfs$elmhotels$Autocompleter_State$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'QueryChanged':
				var _p1 = _p0._0;
				var fx = (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$String$length(_p1),
					2) > 0) ? _julianjelfs$elmhotels$Autocompleter_Cmds$getDestinations(_p1) : _elm_lang$core$Platform_Cmd$none;
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{query: _p1}),
					_1: fx,
					_2: _elm_lang$core$Platform_Cmd$none
				};
			case 'SelectDestination':
				var _p2 = _p0._0;
				return {
					ctor: '_Tuple3',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							selected: _p2,
							destinations: {ctor: '[]'},
							query: _p2.title
						}),
					_1: _elm_lang$core$Platform_Cmd$none,
					_2: _julianjelfs$elmhotels$Api$getHotels(_p2)
				};
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple3',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{destinations: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none,
						_2: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var e = A2(_elm_lang$core$Debug$log, 'Autocompleter lookup failed: ', _p0._0._0);
					return {ctor: '_Tuple3', _0: model, _1: _elm_lang$core$Platform_Cmd$none, _2: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
